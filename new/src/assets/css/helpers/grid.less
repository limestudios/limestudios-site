@media screen and (min-width: 117em) { .wrapper { max-width: 900px; } }
@media screen and (min-width: 720px) { .wrapper { max-width: 800px; } }

/**
 * @class row
 * @description Container class for the grid; adds padding and a max-width.
 */
.row,
.wrapper {

  width: 100%;
  max-width: @screen-tablet;
  margin: 0 auto;
  padding: 0;
  *zoom: 1;

  &:before,
  &:after {
    content: " ";
    display: table;
  }

  &:after {
    clear: both;
  }

  &.row-phone {
    max-width: @screen-phone !important;
  }
  &.row-widephone {
    max-width: @screen-widephone !important;
  }
  &.row-tablet {
    max-width: @screen-tablet !important;
  }
  &.row-widetablet {
    max-width: @screen-widetablet !important;
  }
  &.row-fullwidth {
    max-width: 100% !important;
  }

}

/**
 * @class col
 * @description A column of the grid.
 */
.col {
  position: relative;
  width: 100%;
  max-width: none;
  //padding: 0 1rem;
  float: left;
  .box-sizing();
  .clearfix();
  outline: solid @debug-border black;
}
[class*='col'] +
[class*='col']:last-child {
  //float: right;
}

/**
 * @function grid-small
 * @description Generate classes for each of the columns of the small grid.
 * @param {number} n The number of columns to generate
 * @param {number} i
 */
.grid-phone(@n,@i:1) when (@i =< @n) {
  .col-p-@{i} {
    width: (@i * 100% / @n);
    //outline: solid @debug-border red;
    box-shadow:inset 0px 0px 0px @debug-border #FFEB3B;
    float:left;
  }
  .col-push-p-@{i} {
    margin-left: (@i * 100% / @n);
  }
  .col-pull-p-@{i} {
    margin-right: (@i * 100% / @n);
  }
  .grid-phone(@n, (@i + 1));
}

/**
 * @function grid-medium
 * @description Generate classes for each of the columns of the large grid.
 * @param {number} n The number of columns to generate
 * @param {number} i
 */
.grid-widephone(@n,@i:1) when (@i =< @n) {
  .col-wp-@{i} {
    width: (@i * 100% / @n);
    //outline: solid @debug-border green;
    box-shadow:inset 0px 0px 0px @debug-border #4CAF50;
    float:left;
  }
  .col-push-wp-@{i} {
    margin-left: (@i * 100% / @n);
  }
  .col-pull-wp-@{i} {
    margin-right: (@i * 100% / @n);
  }
  .grid-widephone(@n, (@i + 1));
}

/**
 * @function grid-large
 * @description Generate classes for each of the columns of the large grid.
 * @param {number} n The number of columns to generate
 * @param {number} i
 */
.grid-tablet(@n,@i:1) when (@i =< @n) {
  .col-t-@{i} {
    width: (@i * 100% / @n);
    //outline: solid @debug-border blue;
    box-shadow:inset 0px 0px 0px @debug-border #2196F3;
    float:left;
  }
  .col-push-t-@{i} {
    margin-left: (@i * 100% / @n);
  }
  .col-pull-t-@{i} {
    margin-right: (@i * 100% / @n);
  }
  .grid-tablet(@n, (@i + 1));
}

/**
* @function grid-large
* @description Generate classes for each of the columns of the large grid.
* @param {number} n The number of columns to generate
* @param {number} i
*/
.grid-widetablet(@n,@i:1) when (@i =< @n) {
  .col-wt-@{i} {
    width: (@i * 100% / @n);
    //outline: solid @debug-border blue;
    box-shadow:inset 0px 0px 0px @debug-border #9C27B0;
    float:left;
  }
  .col-push-wt-@{i} {
    margin-left: (@i * 100% / @n);
  }
  .col-pull-wt-@{i} {
    margin-right: (@i * 100% / @n);
  }
  .grid-widetablet(@n, (@i + 1));
}
/**
* @function grid-large
* @description Generate classes for each of the columns of the large grid.
* @param {number} n The number of columns to generate
* @param {number} i
*/
.grid-computer(@n,@i:1) when (@i =< @n) {
  .col-c-@{i} {
    width: (@i * 100% / @n);
    //outline: solid @debug-border blue;
    box-shadow:inset 0px 0px 0px @debug-border #f44336;
    float:left;
  }
  .col-push-c-@{i} {
    margin-left: (@i * 100% / @n);
  }
  .col-pull-c-@{i} {
    margin-right: (@i * 100% / @n);
  }
  .grid-computer(@n, (@i + 1));
}

@media only screen and (min-width: 0) and (max-width: @screen-phone) {
  .grid-phone(12);
  .hide-on-p {
    display: none @important;
  }
  .show-on-p {
    display: block;
  }
}
@media only screen and (min-width: @screen-phone) and (max-width: @screen-widephone) {
  .grid-widephone(12);
  .hide-on-wp {
    display: none @important;
  }
  .show-on-wp {
    display: block;
  }
}
@media only screen and (min-width: @screen-widephone) and (max-width: @screen-tablet) {
  .grid-tablet(12);
  .hide-on-t {
    display: none @important;
  }
  .show-on-t {
    display: block;
  }
}
@media only screen and (min-width: @screen-tablet) and (max-width: @screen-widetablet) {
  .grid-widetablet(12);
  .hide-on-wt {
    display: none @important;
  }
  .show-on-wt {
    display: block;
  }
}
@media only screen and (min-width: @screen-widetablet) {
  .grid-computer(12);
  .hide-on-c {
    display: none @important;
  }
  .show-on-c {
    display: block;
  }
}
